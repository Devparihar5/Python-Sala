import json
import getpass
import os
import platform

# Define a dictionary to store passwords
passwords = {}

# Function to add a new password
def add_password():
    website = input("Website: ")
    if website in passwords:
        print("Website already exists. Use 'Update Password' option.")
        return
    
    username = input("Username: ")
    password = get_hidden_input("Password: ")  # Hide the password input with asterisks
    passwords[website] = {"username": username, "password": password}
    save_passwords()
    print("Password added successfully.")

# Function to retrieve a password
def get_password():
    website = input("Website: ")
    if website in passwords:
        print("Username:", passwords[website]["username"])
        print("Password:", passwords[website]["password"])
    else:
        print("Website not found.")

# Function to update a password
def update_password():
    website = input("Website: ")
    if website not in passwords:
        print("Website not found. Use 'Add Password' option to add a new password.")
        return
    
    new_password = get_hidden_input("New Password: ")  # Hide the password input with asterisks
    passwords[website]["password"] = new_password
    save_passwords()
    print("Password updated successfully.")

# Function to delete a password
def delete_password():
    website = input("Website: ")
    if website in passwords:
        del passwords[website]
        save_passwords()
        print("Password deleted successfully.")
    else:
        print("Website not found.")

# Function to list all websites
def list_websites():
    if passwords:
        print("List of Websites:")
        for website in passwords:
            print("-", website)
    else:
        print("No passwords stored yet.")

# Function to save passwords to a JSON file
def save_passwords():
    with open("passwords.json", "w") as file:
        json.dump(passwords, file)

# Function to load passwords from a JSON file
def load_passwords():
    try:
        with open("passwords.json", "r") as file:
            return json.load(file)
    except FileNotFoundError:
        return {}

# Function to get hidden input with asterisks
def get_hidden_input(prompt):
    # Suppress getpass warning message by redirecting stderr to null device
    sys_platform = platform.system()
    if sys_platform == "Windows":
        stderr_fd = None
    else:
        stderr_fd = os.open(os.devnull, os.O_WRONLY)

    password = ""
    try:
        password = getpass.getpass(prompt, stream=stderr_fd)
    finally:
        if stderr_fd is not None:
            os.close(stderr_fd)
    return password

def main():
    global passwords
    passwords = load_passwords()
    
    while True:
        print("\nOptions:")
        print("1. Add Password")
        print("2. Get Password")
        print("3. Update Password")
        print("4. Delete Password")
        print("5. List Websites")
        print("6. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == '1':
            add_password()
        elif choice == '2':
            get_password()
        elif choice == '3':
            update_password()
        elif choice == '4':
            delete_password()
        elif choice == '5':
            list_websites()
        elif choice == '6':
            save_passwords()
            print("Exiting Password Manager.")
            break
        else:
            print("Invalid choice. Please choose a valid option.")

if __name__ == "__main__":
    main()
